<% provide(:title, 'Advanced Search') %>

<%= render "layouts/header" %>

<div class="text-center top-padding-to-miss-navbar">
  <h1>Advanced Search</h1>
</div>

<div class="small-side-margins">
	<form action="/properties/adv_search" id="adv-search-form">
		<strong>Street</strong>
    <%= text_field('', :filter, :value => params[:filter]) %>

		<strong>APN</strong>
    <%= text_field('', :apn, :value => params[:apn]) %>

		<strong>AHAD ID</strong>
    <%= text_field('', :ahadid, :value => params[:ahadid]) %>

		<strong>Architect</strong>
		<div id="as-architects-container">
			<select id="as-architects-select2" name="architects[]" multiple="multiple"  style="width: 95%">
				<option>Any</option>
	      <% ar_architects = Property.distinct.order(:architect).pluck(:architect) %>
	      <% for i in 2..ar_architects.length do %>
	      	<option 
	      	<% if (!params[:architects].nil?) && (params[:architects].include? ar_architects[i]) then %>
	      		selected >
	      	<% else %>
	      	  >
	      	<% end %>
	      	<%= ar_architects[i] %></option>
	      <% end %>
	    </select>
		</div>
		
		<br>
		<div><strong>Architects</strong>
			<select id="as_fuzzy_architects_comparison" name="fuzzy_architects_comparison"
			style="width:8em;">
				<option <%= params[:fuzzy_architects_comparison] == "Contains Any" ? "selected" : "" %> >Contains Any</option>
				<option <%= params[:fuzzy_architects_comparison] == "Contains All" ? "selected" : "" %> >Contains All</option>
			</select>
			<input type="text" id="as_fuzzy_architects" onClick="as_fuzzy_architects_on_click()"
				name="fuzzy_architects" style="width:60%" 
				<% if (!params[:fuzzy_architects].nil? && params[:fuzzy_architects].length > 0) %>
					value="<%="#{params[:fuzzy_architects]}"%>"
				<% else %>
				  value="Separate names with commas, e.g. Bennett,Haskell,Cyril."
				<% end %>
				>
			</span>
		</div>
		
		<strong>Builder</strong>
		<div id="as-builders-container">
			<select id="as-builders-select2" name="builders[]" multiple="multiple" style="width: 95%">
				<option>Any</option>
	      <% ar_builders = Property.distinct.order(:builder).pluck(:builder) %>
	      <% for i in 0..ar_builders.length do %>
	      	<option 
	      	<% if (!params[:builders].nil?) && (params[:builders].include? ar_builders[i]) then %>
	      		selected >
	      	<% else %>
	      	  >
	      	<% end %>
	      	<%= ar_builders[i] %></option>
	      <% end %>
	    </select>
		</div>

		<br>
		<div><strong>Builders</strong>
			<select id="as_fuzzy_builders_comparison" name="fuzzy_builders_comparison"
			style="width:8em;">
				<option <%= params[:fuzzy_builders_comparison] == "Contains Any" ? "selected" : "" %> >Contains Any</option>
				<option <%= params[:fuzzy_builders_comparison] == "Contains All" ? "selected" : "" %> >Contains All</option>
			</select>
			<input type="text" id="as_fuzzy_builders" onClick="as_fuzzy_builders_on_click()"
				name="fuzzy_builders" style="width:60%" 
				<% if (!params[:fuzzy_builders].nil? && params[:fuzzy_builders].length > 0) %>
					value="<%="#{params[:fuzzy_builders]}"%>"
				<% else %>
				  value="Separate names with commas, e.g. Bennett,Haskell,Cyril."
				<% end %>
				>
			</span>
		</div>
	
		<br>

		<div><strong>Year Built</strong>
			<select id="as_yearbuilt_comparison" name="yearbuilt_comparison" onchange="onChangeYearBuilt()"
			style="width:8em;">
				<option <%= params[:yearbuilt_comparison] == "Is Equal To" ? "selected" : "" %> >Is Equal To</option>
				<option <%= params[:yearbuilt_comparison] == "Is Greater Than" ? "selected" : "" %> >Is Greater Than</option>
				<option <%= params[:yearbuilt_comparison] == "Is Less Than" ? "selected" : "" %> >Is Less Than</option>
				<option <%= params[:yearbuilt_comparison] == "Is Between" ? "selected" : "" %> >Is Between</option>
			</select>
			<input type="number" id="as_yearbuilt_from_year" 
				name="yearbuilt_from_year" style="width:4em"
				<%= (!params[:yearbuilt_from_year].nil? && params[:yearbuilt_from_year].length > 0) ? "value=#{params[:yearbuilt_from_year]}" : "" %>
				>
			<span id="as_yearbuilt_to_year_container" >
				and <input type="number" id="as_yearbuilt_to_year" name="yearbuilt_to_year"  style="width:4em"
				<%= (!params[:yearbuilt_to_year].nil? && params[:yearbuilt_to_year].length > 0) ? "value=#{params[:yearbuilt_to_year]}" : "" %>
				>
			</span>
		</div>



		<strong>Style</strong>
		<div id="as-styles-container">
			<select id="as-styles-select2" name="styles[]" multiple="multiple"  style="width: 95%">
				<option>Any</option>
	      <% ar_styles = Property.distinct.order(:style).pluck(:style) %>
	      <% for i in 2..ar_styles.length do %>
	      	<option 
	      	<% if (!params[:styles].nil?) && (params[:styles].include? ar_styles[i]) then %>
	      		selected >
	      	<% else %>
	      	  >
	      	<% end %>
	      	<%= ar_styles[i] %></option>
	      <% end %>
	    </select>
		</div>

		<strong>Type</strong>
		<div id="as-types-container">
			<select id="as-types-select2" name="types[]" multiple="multiple"  style="width: 95%">
				<option>Any</option>
	      <% ar_types = Property.distinct.order(:type).pluck(:type) %>
	      <% for i in 2..ar_types.length do %>
	      	<option 
	      	<% if (!params[:types].nil?) && (params[:types].include? ar_types[i]) then %>
	      		selected >
	      	<% else %>
	      	  >
	      	<% end %>
	      	<%= ar_types[i] %></option>
	      <% end %>
	    </select>
		</div>

		<br>

		<div id="as-architects-btn-container">
			<button id="as-search-btn" class="btn-arrow-anim" name="search"
		    type="submit" value="submit">
			  <span class="btn-arrow-anim__text">Search </span>
			</button>
		</div>
	</form>
	
	<button type="button" onClick="resetAllFilters()">Reset All Filters</button>
	<br><br>
</div>

<% sql = get_adv_search_sql(params) %>
<% if !params[:apn].nil? && params[:apn].length > 0 %>
	<% @properties = Property.find_by_sql(sql) %>
	<% # The above returns the apn id, not property id, so need the below %>
	<% @properties = Property.where(:address1 => @properties[0].address1) %>
	<div id="ui-padded-sides">
	  <ul class="properties">
	    <%= render @properties %>
	  </ul>
	</div>
	
<% else %>
	<% @properties = Property.paginate_by_sql(sql, page: params[:page], per_page: 30)%>
	<% if @properties.count > 0 then %>
	
	<div class="small-side-margins">
		<strong><%= get_prop_count(sql) %> Properties Listed Below</strong>
		<br>
	</div>
	
		<div class="ui-left-margin">
		  <%= will_paginate %>
		</div>
		
		<div id="ui-padded-sides">
		  <ul class="properties">
		    <%= render @properties %>
		  </ul>
		</div>
		
		<div class="ui-left-margin">
		  <%= will_paginate %>
		</div>
	
	<% else %>
	
	<div class="small-side-margins">
		<strong>None Found That Match Criteria</strong>
	</div>
	
	<% end %>
<% end %>


